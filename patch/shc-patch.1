--- shc-3.8.7.c.a	2013-01-05 23:59:59.196589654 +0400
+++ shc-3.8.7.c.b	2013-01-06 00:00:26.065925387 +0400
@@ -58,7 +58,7 @@
 0};
 
 static const char usage[] = 
-"Usage: shc [-e date] [-m addr] [-i iopt] [-x cmnd] [-l lopt] [-rvDTCAh] -f script";
+"Usage: shc [-e date] [-m addr] [-i iopt] [-x cmnd] [-l lopt] [-rvDTCABh] -f script";
 
 static const char * help[] = {
 "",
@@ -74,6 +74,7 @@
 "    -T     Allow binary to be traceable [no]",
 "    -C     Display license and exit",
 "    -A     Display abstract and exit",
+"    -B     Compile for busybox",
 "    -h     Display help and exit",
 "",
 "    Environment variables used:",
@@ -118,6 +119,9 @@
 static const char TRACEABLE_line[] =
 "#define TRACEABLE	%d	/* Define as 1 to enable ptrace the executable */\n";
 static int TRACEABLE_flag;
+static const char BUSYBOXON_line[] =
+"#define BUSYBOXON	%d	/* Define as 1 to enable work with busybox */\n";
+static int BUSYBOXON_flag;
 
 static const char * RTC[] = {
 "",
@@ -378,7 +382,12 @@
 "		}",
 "	}",
 "	j = 0;",
+"#if BUSYBOXON",
+"	varg[j++] = \"busybox\";",
+"	varg[j++] = \"sh\";",
+"#else",
 "	varg[j++] = argv[0];		/* My own name at execution */",
+"#endif",
 "	if (ret && *opts)",
 "		varg[j++] = opts;	/* Options on 1st line of code */",
 "	if (*inlo)",
@@ -418,7 +427,7 @@
 static int parse_an_arg(int argc, char * argv[])
 {
 	extern char * optarg;
-	const char * opts = "e:m:f:i:x:l:rvDTCAh";
+	const char * opts = "e:m:f:i:x:l:rvDTCABh";
 	struct tm tmp[1];
 	time_t expdate;
 	int cnt, l;
@@ -508,6 +517,9 @@
 			return -1;
 		}
 		return 0;
+	case 'B':
+		BUSYBOXON_flag = 1;
+		break;
 	case ':':
 		fprintf(stderr, "%s parse: Missing parameter\n", my_name);
 		return -1;
@@ -922,6 +934,7 @@
 	fprintf(o, "#define      %s_z	%d\n", "hide", 1<<12);
 	fprintf(o, DEBUGEXEC_line, DEBUGEXEC_flag);
 	fprintf(o, TRACEABLE_line, TRACEABLE_flag);
+	fprintf(o, BUSYBOXON_line, BUSYBOXON_flag);
 	for (indx = 0; RTC[indx]; indx++)
 		fprintf(o, "%s\n", RTC[indx]);
 	fflush(o);

